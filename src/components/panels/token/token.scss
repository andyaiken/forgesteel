@use "sass:color";

$monster-default: rgb(217, 217, 217);
$monster-ambusher: rgb(242, 218, 109);
$monster-artillery: rgb(202, 192, 215);
$monster-brute: rgb(149, 178, 222);
$monster-controller: rgb(238, 132, 129);
$monster-defender: rgb(195, 188, 154);
$monster-harrier: rgb(222, 186, 184);
$monster-hexer: rgb(216, 226, 192);
$monster-mount: rgb(190, 220, 231);
$monster-support: rgb(245, 213, 184);

.token {
	aspect-ratio: 1/1;
	border-radius: 50%;
	background: linear-gradient(color.scale($monster-default, $lightness: 10%), color.scale($monster-default, $lightness: -10%));
	border: 1px solid color.scale($monster-default, $lightness: -20%);
	box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.25);

	&.ambusher {
		background: linear-gradient(color.scale($monster-ambusher, $lightness: 10%), color.scale($monster-ambusher, $lightness: -10%));
		border-color: color.scale($monster-ambusher, $lightness: -20%);
	}

	&.artillery {
		background: linear-gradient(color.scale($monster-artillery, $lightness: 10%), color.scale($monster-artillery, $lightness: -10%));
		border-color: color.scale($monster-artillery, $lightness: -20%);
	}

	&.brute {
		background: linear-gradient(color.scale($monster-brute, $lightness: 10%), color.scale($monster-brute, $lightness: -10%));
		border-color: color.scale($monster-brute, $lightness: -20%);
	}

	&.controller {
		background: linear-gradient(color.scale($monster-controller, $lightness: 10%), color.scale($monster-controller, $lightness: -10%));
		border-color: color.scale($monster-controller, $lightness: -20%);
	}

	&.defender {
		background: linear-gradient(color.scale($monster-defender, $lightness: 10%), color.scale($monster-defender, $lightness: -10%));
		border-color: color.scale($monster-defender, $lightness: -20%);
	}

	&.harrier {
		background: linear-gradient(color.scale($monster-harrier, $lightness: 10%), color.scale($monster-harrier, $lightness: -10%));
		border-color: color.scale($monster-harrier, $lightness: -20%);
	}

	&.hexer {
		background: linear-gradient(color.scale($monster-hexer, $lightness: 10%), color.scale($monster-hexer, $lightness: -10%));
		border-color: color.scale($monster-hexer, $lightness: -20%);
	}

	&.mount {
		background: linear-gradient(color.scale($monster-mount, $lightness: 10%), color.scale($monster-mount, $lightness: -10%));
		border-color: color.scale($monster-mount, $lightness: -20%);
	}

	&.support {
		background: linear-gradient(color.scale($monster-support, $lightness: 10%), color.scale($monster-support, $lightness: -10%));
		border-color: color.scale($monster-support, $lightness: -20%);
	}

	&.clickable {
		cursor: pointer;
	}

	.inner-token {
		height: 100%;
		width: 100%;
		display: flex;
		align-items: center;
		justify-content: center;
		background: rgb(0, 0, 0);
		border-radius: 50%;
		color: white;
		font-weight: 600;
		user-select: none;
		overflow: hidden;

		&.hero {
			background: linear-gradient(rgb(0, 100, 0), rgb(0, 60, 0));
		}

		&.monster {
			background: linear-gradient(rgb(100, 0, 0), rgb(60, 0, 0));
		}

		&.defeated {
			text-decoration: line-through;
			filter: grayscale(1);
		}

		.portrait {
			aspect-ratio: 1/1;
			width: 100%;
			height: 100%;
			object-fit: cover;
		}
	}
}

.combatant-button-content {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;

	.combatant-button-details {
		flex: 1 1 0;
		display: flex;
		flex-direction: column;
		overflow: hidden;

		.combatant-name {
			overflow: hidden;
			text-overflow: ellipsis;
		}

		.combatant-info {
			font-size: 10px;
			opacity: 0.7;
		}
	}
}
